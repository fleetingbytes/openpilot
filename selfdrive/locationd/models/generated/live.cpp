#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8714353098324573288) {
   out_8714353098324573288[0] = 0;
   out_8714353098324573288[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8714353098324573288[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8714353098324573288[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8714353098324573288[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8714353098324573288[5] = -sin(in_vec[1]);
   out_8714353098324573288[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8714353098324573288[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8714353098324573288[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8714353098324573288[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8714353098324573288[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8714353098324573288[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8714353098324573288[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8714353098324573288[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8714353098324573288[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8714353098324573288[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8714353098324573288[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8714353098324573288[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3390447180956984316) {
   out_3390447180956984316[0] = delta_x[0] + nom_x[0];
   out_3390447180956984316[1] = delta_x[1] + nom_x[1];
   out_3390447180956984316[2] = delta_x[2] + nom_x[2];
   out_3390447180956984316[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3390447180956984316[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3390447180956984316[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3390447180956984316[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3390447180956984316[7] = delta_x[6] + nom_x[7];
   out_3390447180956984316[8] = delta_x[7] + nom_x[8];
   out_3390447180956984316[9] = delta_x[8] + nom_x[9];
   out_3390447180956984316[10] = delta_x[9] + nom_x[10];
   out_3390447180956984316[11] = delta_x[10] + nom_x[11];
   out_3390447180956984316[12] = delta_x[11] + nom_x[12];
   out_3390447180956984316[13] = delta_x[12] + nom_x[13];
   out_3390447180956984316[14] = delta_x[13] + nom_x[14];
   out_3390447180956984316[15] = delta_x[14] + nom_x[15];
   out_3390447180956984316[16] = delta_x[15] + nom_x[16];
   out_3390447180956984316[17] = delta_x[16] + nom_x[17];
   out_3390447180956984316[18] = delta_x[17] + nom_x[18];
   out_3390447180956984316[19] = delta_x[18] + nom_x[19];
   out_3390447180956984316[20] = delta_x[19] + nom_x[20];
   out_3390447180956984316[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6050591331665856977) {
   out_6050591331665856977[0] = -nom_x[0] + true_x[0];
   out_6050591331665856977[1] = -nom_x[1] + true_x[1];
   out_6050591331665856977[2] = -nom_x[2] + true_x[2];
   out_6050591331665856977[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6050591331665856977[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6050591331665856977[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6050591331665856977[6] = -nom_x[7] + true_x[7];
   out_6050591331665856977[7] = -nom_x[8] + true_x[8];
   out_6050591331665856977[8] = -nom_x[9] + true_x[9];
   out_6050591331665856977[9] = -nom_x[10] + true_x[10];
   out_6050591331665856977[10] = -nom_x[11] + true_x[11];
   out_6050591331665856977[11] = -nom_x[12] + true_x[12];
   out_6050591331665856977[12] = -nom_x[13] + true_x[13];
   out_6050591331665856977[13] = -nom_x[14] + true_x[14];
   out_6050591331665856977[14] = -nom_x[15] + true_x[15];
   out_6050591331665856977[15] = -nom_x[16] + true_x[16];
   out_6050591331665856977[16] = -nom_x[17] + true_x[17];
   out_6050591331665856977[17] = -nom_x[18] + true_x[18];
   out_6050591331665856977[18] = -nom_x[19] + true_x[19];
   out_6050591331665856977[19] = -nom_x[20] + true_x[20];
   out_6050591331665856977[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6584064886042052704) {
   out_6584064886042052704[0] = 1.0;
   out_6584064886042052704[1] = 0;
   out_6584064886042052704[2] = 0;
   out_6584064886042052704[3] = 0;
   out_6584064886042052704[4] = 0;
   out_6584064886042052704[5] = 0;
   out_6584064886042052704[6] = 0;
   out_6584064886042052704[7] = 0;
   out_6584064886042052704[8] = 0;
   out_6584064886042052704[9] = 0;
   out_6584064886042052704[10] = 0;
   out_6584064886042052704[11] = 0;
   out_6584064886042052704[12] = 0;
   out_6584064886042052704[13] = 0;
   out_6584064886042052704[14] = 0;
   out_6584064886042052704[15] = 0;
   out_6584064886042052704[16] = 0;
   out_6584064886042052704[17] = 0;
   out_6584064886042052704[18] = 0;
   out_6584064886042052704[19] = 0;
   out_6584064886042052704[20] = 0;
   out_6584064886042052704[21] = 0;
   out_6584064886042052704[22] = 1.0;
   out_6584064886042052704[23] = 0;
   out_6584064886042052704[24] = 0;
   out_6584064886042052704[25] = 0;
   out_6584064886042052704[26] = 0;
   out_6584064886042052704[27] = 0;
   out_6584064886042052704[28] = 0;
   out_6584064886042052704[29] = 0;
   out_6584064886042052704[30] = 0;
   out_6584064886042052704[31] = 0;
   out_6584064886042052704[32] = 0;
   out_6584064886042052704[33] = 0;
   out_6584064886042052704[34] = 0;
   out_6584064886042052704[35] = 0;
   out_6584064886042052704[36] = 0;
   out_6584064886042052704[37] = 0;
   out_6584064886042052704[38] = 0;
   out_6584064886042052704[39] = 0;
   out_6584064886042052704[40] = 0;
   out_6584064886042052704[41] = 0;
   out_6584064886042052704[42] = 0;
   out_6584064886042052704[43] = 0;
   out_6584064886042052704[44] = 1.0;
   out_6584064886042052704[45] = 0;
   out_6584064886042052704[46] = 0;
   out_6584064886042052704[47] = 0;
   out_6584064886042052704[48] = 0;
   out_6584064886042052704[49] = 0;
   out_6584064886042052704[50] = 0;
   out_6584064886042052704[51] = 0;
   out_6584064886042052704[52] = 0;
   out_6584064886042052704[53] = 0;
   out_6584064886042052704[54] = 0;
   out_6584064886042052704[55] = 0;
   out_6584064886042052704[56] = 0;
   out_6584064886042052704[57] = 0;
   out_6584064886042052704[58] = 0;
   out_6584064886042052704[59] = 0;
   out_6584064886042052704[60] = 0;
   out_6584064886042052704[61] = 0;
   out_6584064886042052704[62] = 0;
   out_6584064886042052704[63] = 0;
   out_6584064886042052704[64] = 0;
   out_6584064886042052704[65] = 0;
   out_6584064886042052704[66] = -0.5*state[4];
   out_6584064886042052704[67] = -0.5*state[5];
   out_6584064886042052704[68] = -0.5*state[6];
   out_6584064886042052704[69] = 0;
   out_6584064886042052704[70] = 0;
   out_6584064886042052704[71] = 0;
   out_6584064886042052704[72] = 0;
   out_6584064886042052704[73] = 0;
   out_6584064886042052704[74] = 0;
   out_6584064886042052704[75] = 0;
   out_6584064886042052704[76] = 0;
   out_6584064886042052704[77] = 0;
   out_6584064886042052704[78] = 0;
   out_6584064886042052704[79] = 0;
   out_6584064886042052704[80] = 0;
   out_6584064886042052704[81] = 0;
   out_6584064886042052704[82] = 0;
   out_6584064886042052704[83] = 0;
   out_6584064886042052704[84] = 0;
   out_6584064886042052704[85] = 0;
   out_6584064886042052704[86] = 0;
   out_6584064886042052704[87] = 0.5*state[3];
   out_6584064886042052704[88] = 0.5*state[6];
   out_6584064886042052704[89] = -0.5*state[5];
   out_6584064886042052704[90] = 0;
   out_6584064886042052704[91] = 0;
   out_6584064886042052704[92] = 0;
   out_6584064886042052704[93] = 0;
   out_6584064886042052704[94] = 0;
   out_6584064886042052704[95] = 0;
   out_6584064886042052704[96] = 0;
   out_6584064886042052704[97] = 0;
   out_6584064886042052704[98] = 0;
   out_6584064886042052704[99] = 0;
   out_6584064886042052704[100] = 0;
   out_6584064886042052704[101] = 0;
   out_6584064886042052704[102] = 0;
   out_6584064886042052704[103] = 0;
   out_6584064886042052704[104] = 0;
   out_6584064886042052704[105] = 0;
   out_6584064886042052704[106] = 0;
   out_6584064886042052704[107] = 0;
   out_6584064886042052704[108] = -0.5*state[6];
   out_6584064886042052704[109] = 0.5*state[3];
   out_6584064886042052704[110] = 0.5*state[4];
   out_6584064886042052704[111] = 0;
   out_6584064886042052704[112] = 0;
   out_6584064886042052704[113] = 0;
   out_6584064886042052704[114] = 0;
   out_6584064886042052704[115] = 0;
   out_6584064886042052704[116] = 0;
   out_6584064886042052704[117] = 0;
   out_6584064886042052704[118] = 0;
   out_6584064886042052704[119] = 0;
   out_6584064886042052704[120] = 0;
   out_6584064886042052704[121] = 0;
   out_6584064886042052704[122] = 0;
   out_6584064886042052704[123] = 0;
   out_6584064886042052704[124] = 0;
   out_6584064886042052704[125] = 0;
   out_6584064886042052704[126] = 0;
   out_6584064886042052704[127] = 0;
   out_6584064886042052704[128] = 0;
   out_6584064886042052704[129] = 0.5*state[5];
   out_6584064886042052704[130] = -0.5*state[4];
   out_6584064886042052704[131] = 0.5*state[3];
   out_6584064886042052704[132] = 0;
   out_6584064886042052704[133] = 0;
   out_6584064886042052704[134] = 0;
   out_6584064886042052704[135] = 0;
   out_6584064886042052704[136] = 0;
   out_6584064886042052704[137] = 0;
   out_6584064886042052704[138] = 0;
   out_6584064886042052704[139] = 0;
   out_6584064886042052704[140] = 0;
   out_6584064886042052704[141] = 0;
   out_6584064886042052704[142] = 0;
   out_6584064886042052704[143] = 0;
   out_6584064886042052704[144] = 0;
   out_6584064886042052704[145] = 0;
   out_6584064886042052704[146] = 0;
   out_6584064886042052704[147] = 0;
   out_6584064886042052704[148] = 0;
   out_6584064886042052704[149] = 0;
   out_6584064886042052704[150] = 0;
   out_6584064886042052704[151] = 0;
   out_6584064886042052704[152] = 0;
   out_6584064886042052704[153] = 1.0;
   out_6584064886042052704[154] = 0;
   out_6584064886042052704[155] = 0;
   out_6584064886042052704[156] = 0;
   out_6584064886042052704[157] = 0;
   out_6584064886042052704[158] = 0;
   out_6584064886042052704[159] = 0;
   out_6584064886042052704[160] = 0;
   out_6584064886042052704[161] = 0;
   out_6584064886042052704[162] = 0;
   out_6584064886042052704[163] = 0;
   out_6584064886042052704[164] = 0;
   out_6584064886042052704[165] = 0;
   out_6584064886042052704[166] = 0;
   out_6584064886042052704[167] = 0;
   out_6584064886042052704[168] = 0;
   out_6584064886042052704[169] = 0;
   out_6584064886042052704[170] = 0;
   out_6584064886042052704[171] = 0;
   out_6584064886042052704[172] = 0;
   out_6584064886042052704[173] = 0;
   out_6584064886042052704[174] = 0;
   out_6584064886042052704[175] = 1.0;
   out_6584064886042052704[176] = 0;
   out_6584064886042052704[177] = 0;
   out_6584064886042052704[178] = 0;
   out_6584064886042052704[179] = 0;
   out_6584064886042052704[180] = 0;
   out_6584064886042052704[181] = 0;
   out_6584064886042052704[182] = 0;
   out_6584064886042052704[183] = 0;
   out_6584064886042052704[184] = 0;
   out_6584064886042052704[185] = 0;
   out_6584064886042052704[186] = 0;
   out_6584064886042052704[187] = 0;
   out_6584064886042052704[188] = 0;
   out_6584064886042052704[189] = 0;
   out_6584064886042052704[190] = 0;
   out_6584064886042052704[191] = 0;
   out_6584064886042052704[192] = 0;
   out_6584064886042052704[193] = 0;
   out_6584064886042052704[194] = 0;
   out_6584064886042052704[195] = 0;
   out_6584064886042052704[196] = 0;
   out_6584064886042052704[197] = 1.0;
   out_6584064886042052704[198] = 0;
   out_6584064886042052704[199] = 0;
   out_6584064886042052704[200] = 0;
   out_6584064886042052704[201] = 0;
   out_6584064886042052704[202] = 0;
   out_6584064886042052704[203] = 0;
   out_6584064886042052704[204] = 0;
   out_6584064886042052704[205] = 0;
   out_6584064886042052704[206] = 0;
   out_6584064886042052704[207] = 0;
   out_6584064886042052704[208] = 0;
   out_6584064886042052704[209] = 0;
   out_6584064886042052704[210] = 0;
   out_6584064886042052704[211] = 0;
   out_6584064886042052704[212] = 0;
   out_6584064886042052704[213] = 0;
   out_6584064886042052704[214] = 0;
   out_6584064886042052704[215] = 0;
   out_6584064886042052704[216] = 0;
   out_6584064886042052704[217] = 0;
   out_6584064886042052704[218] = 0;
   out_6584064886042052704[219] = 1.0;
   out_6584064886042052704[220] = 0;
   out_6584064886042052704[221] = 0;
   out_6584064886042052704[222] = 0;
   out_6584064886042052704[223] = 0;
   out_6584064886042052704[224] = 0;
   out_6584064886042052704[225] = 0;
   out_6584064886042052704[226] = 0;
   out_6584064886042052704[227] = 0;
   out_6584064886042052704[228] = 0;
   out_6584064886042052704[229] = 0;
   out_6584064886042052704[230] = 0;
   out_6584064886042052704[231] = 0;
   out_6584064886042052704[232] = 0;
   out_6584064886042052704[233] = 0;
   out_6584064886042052704[234] = 0;
   out_6584064886042052704[235] = 0;
   out_6584064886042052704[236] = 0;
   out_6584064886042052704[237] = 0;
   out_6584064886042052704[238] = 0;
   out_6584064886042052704[239] = 0;
   out_6584064886042052704[240] = 0;
   out_6584064886042052704[241] = 1.0;
   out_6584064886042052704[242] = 0;
   out_6584064886042052704[243] = 0;
   out_6584064886042052704[244] = 0;
   out_6584064886042052704[245] = 0;
   out_6584064886042052704[246] = 0;
   out_6584064886042052704[247] = 0;
   out_6584064886042052704[248] = 0;
   out_6584064886042052704[249] = 0;
   out_6584064886042052704[250] = 0;
   out_6584064886042052704[251] = 0;
   out_6584064886042052704[252] = 0;
   out_6584064886042052704[253] = 0;
   out_6584064886042052704[254] = 0;
   out_6584064886042052704[255] = 0;
   out_6584064886042052704[256] = 0;
   out_6584064886042052704[257] = 0;
   out_6584064886042052704[258] = 0;
   out_6584064886042052704[259] = 0;
   out_6584064886042052704[260] = 0;
   out_6584064886042052704[261] = 0;
   out_6584064886042052704[262] = 0;
   out_6584064886042052704[263] = 1.0;
   out_6584064886042052704[264] = 0;
   out_6584064886042052704[265] = 0;
   out_6584064886042052704[266] = 0;
   out_6584064886042052704[267] = 0;
   out_6584064886042052704[268] = 0;
   out_6584064886042052704[269] = 0;
   out_6584064886042052704[270] = 0;
   out_6584064886042052704[271] = 0;
   out_6584064886042052704[272] = 0;
   out_6584064886042052704[273] = 0;
   out_6584064886042052704[274] = 0;
   out_6584064886042052704[275] = 0;
   out_6584064886042052704[276] = 0;
   out_6584064886042052704[277] = 0;
   out_6584064886042052704[278] = 0;
   out_6584064886042052704[279] = 0;
   out_6584064886042052704[280] = 0;
   out_6584064886042052704[281] = 0;
   out_6584064886042052704[282] = 0;
   out_6584064886042052704[283] = 0;
   out_6584064886042052704[284] = 0;
   out_6584064886042052704[285] = 1.0;
   out_6584064886042052704[286] = 0;
   out_6584064886042052704[287] = 0;
   out_6584064886042052704[288] = 0;
   out_6584064886042052704[289] = 0;
   out_6584064886042052704[290] = 0;
   out_6584064886042052704[291] = 0;
   out_6584064886042052704[292] = 0;
   out_6584064886042052704[293] = 0;
   out_6584064886042052704[294] = 0;
   out_6584064886042052704[295] = 0;
   out_6584064886042052704[296] = 0;
   out_6584064886042052704[297] = 0;
   out_6584064886042052704[298] = 0;
   out_6584064886042052704[299] = 0;
   out_6584064886042052704[300] = 0;
   out_6584064886042052704[301] = 0;
   out_6584064886042052704[302] = 0;
   out_6584064886042052704[303] = 0;
   out_6584064886042052704[304] = 0;
   out_6584064886042052704[305] = 0;
   out_6584064886042052704[306] = 0;
   out_6584064886042052704[307] = 1.0;
   out_6584064886042052704[308] = 0;
   out_6584064886042052704[309] = 0;
   out_6584064886042052704[310] = 0;
   out_6584064886042052704[311] = 0;
   out_6584064886042052704[312] = 0;
   out_6584064886042052704[313] = 0;
   out_6584064886042052704[314] = 0;
   out_6584064886042052704[315] = 0;
   out_6584064886042052704[316] = 0;
   out_6584064886042052704[317] = 0;
   out_6584064886042052704[318] = 0;
   out_6584064886042052704[319] = 0;
   out_6584064886042052704[320] = 0;
   out_6584064886042052704[321] = 0;
   out_6584064886042052704[322] = 0;
   out_6584064886042052704[323] = 0;
   out_6584064886042052704[324] = 0;
   out_6584064886042052704[325] = 0;
   out_6584064886042052704[326] = 0;
   out_6584064886042052704[327] = 0;
   out_6584064886042052704[328] = 0;
   out_6584064886042052704[329] = 1.0;
   out_6584064886042052704[330] = 0;
   out_6584064886042052704[331] = 0;
   out_6584064886042052704[332] = 0;
   out_6584064886042052704[333] = 0;
   out_6584064886042052704[334] = 0;
   out_6584064886042052704[335] = 0;
   out_6584064886042052704[336] = 0;
   out_6584064886042052704[337] = 0;
   out_6584064886042052704[338] = 0;
   out_6584064886042052704[339] = 0;
   out_6584064886042052704[340] = 0;
   out_6584064886042052704[341] = 0;
   out_6584064886042052704[342] = 0;
   out_6584064886042052704[343] = 0;
   out_6584064886042052704[344] = 0;
   out_6584064886042052704[345] = 0;
   out_6584064886042052704[346] = 0;
   out_6584064886042052704[347] = 0;
   out_6584064886042052704[348] = 0;
   out_6584064886042052704[349] = 0;
   out_6584064886042052704[350] = 0;
   out_6584064886042052704[351] = 1.0;
   out_6584064886042052704[352] = 0;
   out_6584064886042052704[353] = 0;
   out_6584064886042052704[354] = 0;
   out_6584064886042052704[355] = 0;
   out_6584064886042052704[356] = 0;
   out_6584064886042052704[357] = 0;
   out_6584064886042052704[358] = 0;
   out_6584064886042052704[359] = 0;
   out_6584064886042052704[360] = 0;
   out_6584064886042052704[361] = 0;
   out_6584064886042052704[362] = 0;
   out_6584064886042052704[363] = 0;
   out_6584064886042052704[364] = 0;
   out_6584064886042052704[365] = 0;
   out_6584064886042052704[366] = 0;
   out_6584064886042052704[367] = 0;
   out_6584064886042052704[368] = 0;
   out_6584064886042052704[369] = 0;
   out_6584064886042052704[370] = 0;
   out_6584064886042052704[371] = 0;
   out_6584064886042052704[372] = 0;
   out_6584064886042052704[373] = 1.0;
   out_6584064886042052704[374] = 0;
   out_6584064886042052704[375] = 0;
   out_6584064886042052704[376] = 0;
   out_6584064886042052704[377] = 0;
   out_6584064886042052704[378] = 0;
   out_6584064886042052704[379] = 0;
   out_6584064886042052704[380] = 0;
   out_6584064886042052704[381] = 0;
   out_6584064886042052704[382] = 0;
   out_6584064886042052704[383] = 0;
   out_6584064886042052704[384] = 0;
   out_6584064886042052704[385] = 0;
   out_6584064886042052704[386] = 0;
   out_6584064886042052704[387] = 0;
   out_6584064886042052704[388] = 0;
   out_6584064886042052704[389] = 0;
   out_6584064886042052704[390] = 0;
   out_6584064886042052704[391] = 0;
   out_6584064886042052704[392] = 0;
   out_6584064886042052704[393] = 0;
   out_6584064886042052704[394] = 0;
   out_6584064886042052704[395] = 1.0;
   out_6584064886042052704[396] = 0;
   out_6584064886042052704[397] = 0;
   out_6584064886042052704[398] = 0;
   out_6584064886042052704[399] = 0;
   out_6584064886042052704[400] = 0;
   out_6584064886042052704[401] = 0;
   out_6584064886042052704[402] = 0;
   out_6584064886042052704[403] = 0;
   out_6584064886042052704[404] = 0;
   out_6584064886042052704[405] = 0;
   out_6584064886042052704[406] = 0;
   out_6584064886042052704[407] = 0;
   out_6584064886042052704[408] = 0;
   out_6584064886042052704[409] = 0;
   out_6584064886042052704[410] = 0;
   out_6584064886042052704[411] = 0;
   out_6584064886042052704[412] = 0;
   out_6584064886042052704[413] = 0;
   out_6584064886042052704[414] = 0;
   out_6584064886042052704[415] = 0;
   out_6584064886042052704[416] = 0;
   out_6584064886042052704[417] = 1.0;
   out_6584064886042052704[418] = 0;
   out_6584064886042052704[419] = 0;
   out_6584064886042052704[420] = 0;
   out_6584064886042052704[421] = 0;
   out_6584064886042052704[422] = 0;
   out_6584064886042052704[423] = 0;
   out_6584064886042052704[424] = 0;
   out_6584064886042052704[425] = 0;
   out_6584064886042052704[426] = 0;
   out_6584064886042052704[427] = 0;
   out_6584064886042052704[428] = 0;
   out_6584064886042052704[429] = 0;
   out_6584064886042052704[430] = 0;
   out_6584064886042052704[431] = 0;
   out_6584064886042052704[432] = 0;
   out_6584064886042052704[433] = 0;
   out_6584064886042052704[434] = 0;
   out_6584064886042052704[435] = 0;
   out_6584064886042052704[436] = 0;
   out_6584064886042052704[437] = 0;
   out_6584064886042052704[438] = 0;
   out_6584064886042052704[439] = 1.0;
   out_6584064886042052704[440] = 0;
   out_6584064886042052704[441] = 0;
   out_6584064886042052704[442] = 0;
   out_6584064886042052704[443] = 0;
   out_6584064886042052704[444] = 0;
   out_6584064886042052704[445] = 0;
   out_6584064886042052704[446] = 0;
   out_6584064886042052704[447] = 0;
   out_6584064886042052704[448] = 0;
   out_6584064886042052704[449] = 0;
   out_6584064886042052704[450] = 0;
   out_6584064886042052704[451] = 0;
   out_6584064886042052704[452] = 0;
   out_6584064886042052704[453] = 0;
   out_6584064886042052704[454] = 0;
   out_6584064886042052704[455] = 0;
   out_6584064886042052704[456] = 0;
   out_6584064886042052704[457] = 0;
   out_6584064886042052704[458] = 0;
   out_6584064886042052704[459] = 0;
   out_6584064886042052704[460] = 0;
   out_6584064886042052704[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8896929047166450191) {
   out_8896929047166450191[0] = dt*state[7] + state[0];
   out_8896929047166450191[1] = dt*state[8] + state[1];
   out_8896929047166450191[2] = dt*state[9] + state[2];
   out_8896929047166450191[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8896929047166450191[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8896929047166450191[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8896929047166450191[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8896929047166450191[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8896929047166450191[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8896929047166450191[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8896929047166450191[10] = state[10];
   out_8896929047166450191[11] = state[11];
   out_8896929047166450191[12] = state[12];
   out_8896929047166450191[13] = state[13];
   out_8896929047166450191[14] = state[14];
   out_8896929047166450191[15] = state[15];
   out_8896929047166450191[16] = state[16];
   out_8896929047166450191[17] = state[17];
   out_8896929047166450191[18] = state[18];
   out_8896929047166450191[19] = state[19];
   out_8896929047166450191[20] = state[20];
   out_8896929047166450191[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6591234296711432517) {
   out_6591234296711432517[0] = 1;
   out_6591234296711432517[1] = 0;
   out_6591234296711432517[2] = 0;
   out_6591234296711432517[3] = 0;
   out_6591234296711432517[4] = 0;
   out_6591234296711432517[5] = 0;
   out_6591234296711432517[6] = dt;
   out_6591234296711432517[7] = 0;
   out_6591234296711432517[8] = 0;
   out_6591234296711432517[9] = 0;
   out_6591234296711432517[10] = 0;
   out_6591234296711432517[11] = 0;
   out_6591234296711432517[12] = 0;
   out_6591234296711432517[13] = 0;
   out_6591234296711432517[14] = 0;
   out_6591234296711432517[15] = 0;
   out_6591234296711432517[16] = 0;
   out_6591234296711432517[17] = 0;
   out_6591234296711432517[18] = 0;
   out_6591234296711432517[19] = 0;
   out_6591234296711432517[20] = 0;
   out_6591234296711432517[21] = 0;
   out_6591234296711432517[22] = 1;
   out_6591234296711432517[23] = 0;
   out_6591234296711432517[24] = 0;
   out_6591234296711432517[25] = 0;
   out_6591234296711432517[26] = 0;
   out_6591234296711432517[27] = 0;
   out_6591234296711432517[28] = dt;
   out_6591234296711432517[29] = 0;
   out_6591234296711432517[30] = 0;
   out_6591234296711432517[31] = 0;
   out_6591234296711432517[32] = 0;
   out_6591234296711432517[33] = 0;
   out_6591234296711432517[34] = 0;
   out_6591234296711432517[35] = 0;
   out_6591234296711432517[36] = 0;
   out_6591234296711432517[37] = 0;
   out_6591234296711432517[38] = 0;
   out_6591234296711432517[39] = 0;
   out_6591234296711432517[40] = 0;
   out_6591234296711432517[41] = 0;
   out_6591234296711432517[42] = 0;
   out_6591234296711432517[43] = 0;
   out_6591234296711432517[44] = 1;
   out_6591234296711432517[45] = 0;
   out_6591234296711432517[46] = 0;
   out_6591234296711432517[47] = 0;
   out_6591234296711432517[48] = 0;
   out_6591234296711432517[49] = 0;
   out_6591234296711432517[50] = dt;
   out_6591234296711432517[51] = 0;
   out_6591234296711432517[52] = 0;
   out_6591234296711432517[53] = 0;
   out_6591234296711432517[54] = 0;
   out_6591234296711432517[55] = 0;
   out_6591234296711432517[56] = 0;
   out_6591234296711432517[57] = 0;
   out_6591234296711432517[58] = 0;
   out_6591234296711432517[59] = 0;
   out_6591234296711432517[60] = 0;
   out_6591234296711432517[61] = 0;
   out_6591234296711432517[62] = 0;
   out_6591234296711432517[63] = 0;
   out_6591234296711432517[64] = 0;
   out_6591234296711432517[65] = 0;
   out_6591234296711432517[66] = 1;
   out_6591234296711432517[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6591234296711432517[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6591234296711432517[69] = 0;
   out_6591234296711432517[70] = 0;
   out_6591234296711432517[71] = 0;
   out_6591234296711432517[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6591234296711432517[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6591234296711432517[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6591234296711432517[75] = 0;
   out_6591234296711432517[76] = 0;
   out_6591234296711432517[77] = 0;
   out_6591234296711432517[78] = 0;
   out_6591234296711432517[79] = 0;
   out_6591234296711432517[80] = 0;
   out_6591234296711432517[81] = 0;
   out_6591234296711432517[82] = 0;
   out_6591234296711432517[83] = 0;
   out_6591234296711432517[84] = 0;
   out_6591234296711432517[85] = 0;
   out_6591234296711432517[86] = 0;
   out_6591234296711432517[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6591234296711432517[88] = 1;
   out_6591234296711432517[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6591234296711432517[90] = 0;
   out_6591234296711432517[91] = 0;
   out_6591234296711432517[92] = 0;
   out_6591234296711432517[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6591234296711432517[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6591234296711432517[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6591234296711432517[96] = 0;
   out_6591234296711432517[97] = 0;
   out_6591234296711432517[98] = 0;
   out_6591234296711432517[99] = 0;
   out_6591234296711432517[100] = 0;
   out_6591234296711432517[101] = 0;
   out_6591234296711432517[102] = 0;
   out_6591234296711432517[103] = 0;
   out_6591234296711432517[104] = 0;
   out_6591234296711432517[105] = 0;
   out_6591234296711432517[106] = 0;
   out_6591234296711432517[107] = 0;
   out_6591234296711432517[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6591234296711432517[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6591234296711432517[110] = 1;
   out_6591234296711432517[111] = 0;
   out_6591234296711432517[112] = 0;
   out_6591234296711432517[113] = 0;
   out_6591234296711432517[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6591234296711432517[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6591234296711432517[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6591234296711432517[117] = 0;
   out_6591234296711432517[118] = 0;
   out_6591234296711432517[119] = 0;
   out_6591234296711432517[120] = 0;
   out_6591234296711432517[121] = 0;
   out_6591234296711432517[122] = 0;
   out_6591234296711432517[123] = 0;
   out_6591234296711432517[124] = 0;
   out_6591234296711432517[125] = 0;
   out_6591234296711432517[126] = 0;
   out_6591234296711432517[127] = 0;
   out_6591234296711432517[128] = 0;
   out_6591234296711432517[129] = 0;
   out_6591234296711432517[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6591234296711432517[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6591234296711432517[132] = 1;
   out_6591234296711432517[133] = 0;
   out_6591234296711432517[134] = 0;
   out_6591234296711432517[135] = 0;
   out_6591234296711432517[136] = 0;
   out_6591234296711432517[137] = 0;
   out_6591234296711432517[138] = 0;
   out_6591234296711432517[139] = 0;
   out_6591234296711432517[140] = 0;
   out_6591234296711432517[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6591234296711432517[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6591234296711432517[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6591234296711432517[144] = 0;
   out_6591234296711432517[145] = 0;
   out_6591234296711432517[146] = 0;
   out_6591234296711432517[147] = 0;
   out_6591234296711432517[148] = 0;
   out_6591234296711432517[149] = 0;
   out_6591234296711432517[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6591234296711432517[151] = 0;
   out_6591234296711432517[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6591234296711432517[153] = 0;
   out_6591234296711432517[154] = 1;
   out_6591234296711432517[155] = 0;
   out_6591234296711432517[156] = 0;
   out_6591234296711432517[157] = 0;
   out_6591234296711432517[158] = 0;
   out_6591234296711432517[159] = 0;
   out_6591234296711432517[160] = 0;
   out_6591234296711432517[161] = 0;
   out_6591234296711432517[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6591234296711432517[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6591234296711432517[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6591234296711432517[165] = 0;
   out_6591234296711432517[166] = 0;
   out_6591234296711432517[167] = 0;
   out_6591234296711432517[168] = 0;
   out_6591234296711432517[169] = 0;
   out_6591234296711432517[170] = 0;
   out_6591234296711432517[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6591234296711432517[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6591234296711432517[173] = 0;
   out_6591234296711432517[174] = 0;
   out_6591234296711432517[175] = 0;
   out_6591234296711432517[176] = 1;
   out_6591234296711432517[177] = 0;
   out_6591234296711432517[178] = 0;
   out_6591234296711432517[179] = 0;
   out_6591234296711432517[180] = 0;
   out_6591234296711432517[181] = 0;
   out_6591234296711432517[182] = 0;
   out_6591234296711432517[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6591234296711432517[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6591234296711432517[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6591234296711432517[186] = 0;
   out_6591234296711432517[187] = 0;
   out_6591234296711432517[188] = 0;
   out_6591234296711432517[189] = 0;
   out_6591234296711432517[190] = 0;
   out_6591234296711432517[191] = 0;
   out_6591234296711432517[192] = 0;
   out_6591234296711432517[193] = 0;
   out_6591234296711432517[194] = 0;
   out_6591234296711432517[195] = 0;
   out_6591234296711432517[196] = 0;
   out_6591234296711432517[197] = 0;
   out_6591234296711432517[198] = 1;
   out_6591234296711432517[199] = 0;
   out_6591234296711432517[200] = 0;
   out_6591234296711432517[201] = 0;
   out_6591234296711432517[202] = 0;
   out_6591234296711432517[203] = 0;
   out_6591234296711432517[204] = 0;
   out_6591234296711432517[205] = 0;
   out_6591234296711432517[206] = 0;
   out_6591234296711432517[207] = 0;
   out_6591234296711432517[208] = 0;
   out_6591234296711432517[209] = 0;
   out_6591234296711432517[210] = 0;
   out_6591234296711432517[211] = 0;
   out_6591234296711432517[212] = 0;
   out_6591234296711432517[213] = 0;
   out_6591234296711432517[214] = 0;
   out_6591234296711432517[215] = 0;
   out_6591234296711432517[216] = 0;
   out_6591234296711432517[217] = 0;
   out_6591234296711432517[218] = 0;
   out_6591234296711432517[219] = 0;
   out_6591234296711432517[220] = 1;
   out_6591234296711432517[221] = 0;
   out_6591234296711432517[222] = 0;
   out_6591234296711432517[223] = 0;
   out_6591234296711432517[224] = 0;
   out_6591234296711432517[225] = 0;
   out_6591234296711432517[226] = 0;
   out_6591234296711432517[227] = 0;
   out_6591234296711432517[228] = 0;
   out_6591234296711432517[229] = 0;
   out_6591234296711432517[230] = 0;
   out_6591234296711432517[231] = 0;
   out_6591234296711432517[232] = 0;
   out_6591234296711432517[233] = 0;
   out_6591234296711432517[234] = 0;
   out_6591234296711432517[235] = 0;
   out_6591234296711432517[236] = 0;
   out_6591234296711432517[237] = 0;
   out_6591234296711432517[238] = 0;
   out_6591234296711432517[239] = 0;
   out_6591234296711432517[240] = 0;
   out_6591234296711432517[241] = 0;
   out_6591234296711432517[242] = 1;
   out_6591234296711432517[243] = 0;
   out_6591234296711432517[244] = 0;
   out_6591234296711432517[245] = 0;
   out_6591234296711432517[246] = 0;
   out_6591234296711432517[247] = 0;
   out_6591234296711432517[248] = 0;
   out_6591234296711432517[249] = 0;
   out_6591234296711432517[250] = 0;
   out_6591234296711432517[251] = 0;
   out_6591234296711432517[252] = 0;
   out_6591234296711432517[253] = 0;
   out_6591234296711432517[254] = 0;
   out_6591234296711432517[255] = 0;
   out_6591234296711432517[256] = 0;
   out_6591234296711432517[257] = 0;
   out_6591234296711432517[258] = 0;
   out_6591234296711432517[259] = 0;
   out_6591234296711432517[260] = 0;
   out_6591234296711432517[261] = 0;
   out_6591234296711432517[262] = 0;
   out_6591234296711432517[263] = 0;
   out_6591234296711432517[264] = 1;
   out_6591234296711432517[265] = 0;
   out_6591234296711432517[266] = 0;
   out_6591234296711432517[267] = 0;
   out_6591234296711432517[268] = 0;
   out_6591234296711432517[269] = 0;
   out_6591234296711432517[270] = 0;
   out_6591234296711432517[271] = 0;
   out_6591234296711432517[272] = 0;
   out_6591234296711432517[273] = 0;
   out_6591234296711432517[274] = 0;
   out_6591234296711432517[275] = 0;
   out_6591234296711432517[276] = 0;
   out_6591234296711432517[277] = 0;
   out_6591234296711432517[278] = 0;
   out_6591234296711432517[279] = 0;
   out_6591234296711432517[280] = 0;
   out_6591234296711432517[281] = 0;
   out_6591234296711432517[282] = 0;
   out_6591234296711432517[283] = 0;
   out_6591234296711432517[284] = 0;
   out_6591234296711432517[285] = 0;
   out_6591234296711432517[286] = 1;
   out_6591234296711432517[287] = 0;
   out_6591234296711432517[288] = 0;
   out_6591234296711432517[289] = 0;
   out_6591234296711432517[290] = 0;
   out_6591234296711432517[291] = 0;
   out_6591234296711432517[292] = 0;
   out_6591234296711432517[293] = 0;
   out_6591234296711432517[294] = 0;
   out_6591234296711432517[295] = 0;
   out_6591234296711432517[296] = 0;
   out_6591234296711432517[297] = 0;
   out_6591234296711432517[298] = 0;
   out_6591234296711432517[299] = 0;
   out_6591234296711432517[300] = 0;
   out_6591234296711432517[301] = 0;
   out_6591234296711432517[302] = 0;
   out_6591234296711432517[303] = 0;
   out_6591234296711432517[304] = 0;
   out_6591234296711432517[305] = 0;
   out_6591234296711432517[306] = 0;
   out_6591234296711432517[307] = 0;
   out_6591234296711432517[308] = 1;
   out_6591234296711432517[309] = 0;
   out_6591234296711432517[310] = 0;
   out_6591234296711432517[311] = 0;
   out_6591234296711432517[312] = 0;
   out_6591234296711432517[313] = 0;
   out_6591234296711432517[314] = 0;
   out_6591234296711432517[315] = 0;
   out_6591234296711432517[316] = 0;
   out_6591234296711432517[317] = 0;
   out_6591234296711432517[318] = 0;
   out_6591234296711432517[319] = 0;
   out_6591234296711432517[320] = 0;
   out_6591234296711432517[321] = 0;
   out_6591234296711432517[322] = 0;
   out_6591234296711432517[323] = 0;
   out_6591234296711432517[324] = 0;
   out_6591234296711432517[325] = 0;
   out_6591234296711432517[326] = 0;
   out_6591234296711432517[327] = 0;
   out_6591234296711432517[328] = 0;
   out_6591234296711432517[329] = 0;
   out_6591234296711432517[330] = 1;
   out_6591234296711432517[331] = 0;
   out_6591234296711432517[332] = 0;
   out_6591234296711432517[333] = 0;
   out_6591234296711432517[334] = 0;
   out_6591234296711432517[335] = 0;
   out_6591234296711432517[336] = 0;
   out_6591234296711432517[337] = 0;
   out_6591234296711432517[338] = 0;
   out_6591234296711432517[339] = 0;
   out_6591234296711432517[340] = 0;
   out_6591234296711432517[341] = 0;
   out_6591234296711432517[342] = 0;
   out_6591234296711432517[343] = 0;
   out_6591234296711432517[344] = 0;
   out_6591234296711432517[345] = 0;
   out_6591234296711432517[346] = 0;
   out_6591234296711432517[347] = 0;
   out_6591234296711432517[348] = 0;
   out_6591234296711432517[349] = 0;
   out_6591234296711432517[350] = 0;
   out_6591234296711432517[351] = 0;
   out_6591234296711432517[352] = 1;
   out_6591234296711432517[353] = 0;
   out_6591234296711432517[354] = 0;
   out_6591234296711432517[355] = 0;
   out_6591234296711432517[356] = 0;
   out_6591234296711432517[357] = 0;
   out_6591234296711432517[358] = 0;
   out_6591234296711432517[359] = 0;
   out_6591234296711432517[360] = 0;
   out_6591234296711432517[361] = 0;
   out_6591234296711432517[362] = 0;
   out_6591234296711432517[363] = 0;
   out_6591234296711432517[364] = 0;
   out_6591234296711432517[365] = 0;
   out_6591234296711432517[366] = 0;
   out_6591234296711432517[367] = 0;
   out_6591234296711432517[368] = 0;
   out_6591234296711432517[369] = 0;
   out_6591234296711432517[370] = 0;
   out_6591234296711432517[371] = 0;
   out_6591234296711432517[372] = 0;
   out_6591234296711432517[373] = 0;
   out_6591234296711432517[374] = 1;
   out_6591234296711432517[375] = 0;
   out_6591234296711432517[376] = 0;
   out_6591234296711432517[377] = 0;
   out_6591234296711432517[378] = 0;
   out_6591234296711432517[379] = 0;
   out_6591234296711432517[380] = 0;
   out_6591234296711432517[381] = 0;
   out_6591234296711432517[382] = 0;
   out_6591234296711432517[383] = 0;
   out_6591234296711432517[384] = 0;
   out_6591234296711432517[385] = 0;
   out_6591234296711432517[386] = 0;
   out_6591234296711432517[387] = 0;
   out_6591234296711432517[388] = 0;
   out_6591234296711432517[389] = 0;
   out_6591234296711432517[390] = 0;
   out_6591234296711432517[391] = 0;
   out_6591234296711432517[392] = 0;
   out_6591234296711432517[393] = 0;
   out_6591234296711432517[394] = 0;
   out_6591234296711432517[395] = 0;
   out_6591234296711432517[396] = 1;
   out_6591234296711432517[397] = 0;
   out_6591234296711432517[398] = 0;
   out_6591234296711432517[399] = 0;
   out_6591234296711432517[400] = 0;
   out_6591234296711432517[401] = 0;
   out_6591234296711432517[402] = 0;
   out_6591234296711432517[403] = 0;
   out_6591234296711432517[404] = 0;
   out_6591234296711432517[405] = 0;
   out_6591234296711432517[406] = 0;
   out_6591234296711432517[407] = 0;
   out_6591234296711432517[408] = 0;
   out_6591234296711432517[409] = 0;
   out_6591234296711432517[410] = 0;
   out_6591234296711432517[411] = 0;
   out_6591234296711432517[412] = 0;
   out_6591234296711432517[413] = 0;
   out_6591234296711432517[414] = 0;
   out_6591234296711432517[415] = 0;
   out_6591234296711432517[416] = 0;
   out_6591234296711432517[417] = 0;
   out_6591234296711432517[418] = 1;
   out_6591234296711432517[419] = 0;
   out_6591234296711432517[420] = 0;
   out_6591234296711432517[421] = 0;
   out_6591234296711432517[422] = 0;
   out_6591234296711432517[423] = 0;
   out_6591234296711432517[424] = 0;
   out_6591234296711432517[425] = 0;
   out_6591234296711432517[426] = 0;
   out_6591234296711432517[427] = 0;
   out_6591234296711432517[428] = 0;
   out_6591234296711432517[429] = 0;
   out_6591234296711432517[430] = 0;
   out_6591234296711432517[431] = 0;
   out_6591234296711432517[432] = 0;
   out_6591234296711432517[433] = 0;
   out_6591234296711432517[434] = 0;
   out_6591234296711432517[435] = 0;
   out_6591234296711432517[436] = 0;
   out_6591234296711432517[437] = 0;
   out_6591234296711432517[438] = 0;
   out_6591234296711432517[439] = 0;
   out_6591234296711432517[440] = 1;
}
void h_4(double *state, double *unused, double *out_17249495657416169) {
   out_17249495657416169[0] = state[10] + state[13];
   out_17249495657416169[1] = state[11] + state[14];
   out_17249495657416169[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2862251438192774466) {
   out_2862251438192774466[0] = 0;
   out_2862251438192774466[1] = 0;
   out_2862251438192774466[2] = 0;
   out_2862251438192774466[3] = 0;
   out_2862251438192774466[4] = 0;
   out_2862251438192774466[5] = 0;
   out_2862251438192774466[6] = 0;
   out_2862251438192774466[7] = 0;
   out_2862251438192774466[8] = 0;
   out_2862251438192774466[9] = 0;
   out_2862251438192774466[10] = 1;
   out_2862251438192774466[11] = 0;
   out_2862251438192774466[12] = 0;
   out_2862251438192774466[13] = 1;
   out_2862251438192774466[14] = 0;
   out_2862251438192774466[15] = 0;
   out_2862251438192774466[16] = 0;
   out_2862251438192774466[17] = 0;
   out_2862251438192774466[18] = 0;
   out_2862251438192774466[19] = 0;
   out_2862251438192774466[20] = 0;
   out_2862251438192774466[21] = 0;
   out_2862251438192774466[22] = 0;
   out_2862251438192774466[23] = 0;
   out_2862251438192774466[24] = 0;
   out_2862251438192774466[25] = 0;
   out_2862251438192774466[26] = 0;
   out_2862251438192774466[27] = 0;
   out_2862251438192774466[28] = 0;
   out_2862251438192774466[29] = 0;
   out_2862251438192774466[30] = 0;
   out_2862251438192774466[31] = 0;
   out_2862251438192774466[32] = 0;
   out_2862251438192774466[33] = 1;
   out_2862251438192774466[34] = 0;
   out_2862251438192774466[35] = 0;
   out_2862251438192774466[36] = 1;
   out_2862251438192774466[37] = 0;
   out_2862251438192774466[38] = 0;
   out_2862251438192774466[39] = 0;
   out_2862251438192774466[40] = 0;
   out_2862251438192774466[41] = 0;
   out_2862251438192774466[42] = 0;
   out_2862251438192774466[43] = 0;
   out_2862251438192774466[44] = 0;
   out_2862251438192774466[45] = 0;
   out_2862251438192774466[46] = 0;
   out_2862251438192774466[47] = 0;
   out_2862251438192774466[48] = 0;
   out_2862251438192774466[49] = 0;
   out_2862251438192774466[50] = 0;
   out_2862251438192774466[51] = 0;
   out_2862251438192774466[52] = 0;
   out_2862251438192774466[53] = 0;
   out_2862251438192774466[54] = 0;
   out_2862251438192774466[55] = 0;
   out_2862251438192774466[56] = 1;
   out_2862251438192774466[57] = 0;
   out_2862251438192774466[58] = 0;
   out_2862251438192774466[59] = 1;
   out_2862251438192774466[60] = 0;
   out_2862251438192774466[61] = 0;
   out_2862251438192774466[62] = 0;
   out_2862251438192774466[63] = 0;
   out_2862251438192774466[64] = 0;
   out_2862251438192774466[65] = 0;
}
void h_9(double *state, double *unused, double *out_2084619982870984247) {
   out_2084619982870984247[0] = state[10];
   out_2084619982870984247[1] = state[11];
   out_2084619982870984247[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3103441084822365111) {
   out_3103441084822365111[0] = 0;
   out_3103441084822365111[1] = 0;
   out_3103441084822365111[2] = 0;
   out_3103441084822365111[3] = 0;
   out_3103441084822365111[4] = 0;
   out_3103441084822365111[5] = 0;
   out_3103441084822365111[6] = 0;
   out_3103441084822365111[7] = 0;
   out_3103441084822365111[8] = 0;
   out_3103441084822365111[9] = 0;
   out_3103441084822365111[10] = 1;
   out_3103441084822365111[11] = 0;
   out_3103441084822365111[12] = 0;
   out_3103441084822365111[13] = 0;
   out_3103441084822365111[14] = 0;
   out_3103441084822365111[15] = 0;
   out_3103441084822365111[16] = 0;
   out_3103441084822365111[17] = 0;
   out_3103441084822365111[18] = 0;
   out_3103441084822365111[19] = 0;
   out_3103441084822365111[20] = 0;
   out_3103441084822365111[21] = 0;
   out_3103441084822365111[22] = 0;
   out_3103441084822365111[23] = 0;
   out_3103441084822365111[24] = 0;
   out_3103441084822365111[25] = 0;
   out_3103441084822365111[26] = 0;
   out_3103441084822365111[27] = 0;
   out_3103441084822365111[28] = 0;
   out_3103441084822365111[29] = 0;
   out_3103441084822365111[30] = 0;
   out_3103441084822365111[31] = 0;
   out_3103441084822365111[32] = 0;
   out_3103441084822365111[33] = 1;
   out_3103441084822365111[34] = 0;
   out_3103441084822365111[35] = 0;
   out_3103441084822365111[36] = 0;
   out_3103441084822365111[37] = 0;
   out_3103441084822365111[38] = 0;
   out_3103441084822365111[39] = 0;
   out_3103441084822365111[40] = 0;
   out_3103441084822365111[41] = 0;
   out_3103441084822365111[42] = 0;
   out_3103441084822365111[43] = 0;
   out_3103441084822365111[44] = 0;
   out_3103441084822365111[45] = 0;
   out_3103441084822365111[46] = 0;
   out_3103441084822365111[47] = 0;
   out_3103441084822365111[48] = 0;
   out_3103441084822365111[49] = 0;
   out_3103441084822365111[50] = 0;
   out_3103441084822365111[51] = 0;
   out_3103441084822365111[52] = 0;
   out_3103441084822365111[53] = 0;
   out_3103441084822365111[54] = 0;
   out_3103441084822365111[55] = 0;
   out_3103441084822365111[56] = 1;
   out_3103441084822365111[57] = 0;
   out_3103441084822365111[58] = 0;
   out_3103441084822365111[59] = 0;
   out_3103441084822365111[60] = 0;
   out_3103441084822365111[61] = 0;
   out_3103441084822365111[62] = 0;
   out_3103441084822365111[63] = 0;
   out_3103441084822365111[64] = 0;
   out_3103441084822365111[65] = 0;
}
void h_10(double *state, double *unused, double *out_3447774714965570930) {
   out_3447774714965570930[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3447774714965570930[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3447774714965570930[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_73537383094869577) {
   out_73537383094869577[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_73537383094869577[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_73537383094869577[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_73537383094869577[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_73537383094869577[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_73537383094869577[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_73537383094869577[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_73537383094869577[7] = 0;
   out_73537383094869577[8] = 0;
   out_73537383094869577[9] = 0;
   out_73537383094869577[10] = 0;
   out_73537383094869577[11] = 0;
   out_73537383094869577[12] = 0;
   out_73537383094869577[13] = 0;
   out_73537383094869577[14] = 0;
   out_73537383094869577[15] = 0;
   out_73537383094869577[16] = 1;
   out_73537383094869577[17] = 0;
   out_73537383094869577[18] = 0;
   out_73537383094869577[19] = 1;
   out_73537383094869577[20] = 0;
   out_73537383094869577[21] = 0;
   out_73537383094869577[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_73537383094869577[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_73537383094869577[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_73537383094869577[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_73537383094869577[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_73537383094869577[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_73537383094869577[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_73537383094869577[29] = 0;
   out_73537383094869577[30] = 0;
   out_73537383094869577[31] = 0;
   out_73537383094869577[32] = 0;
   out_73537383094869577[33] = 0;
   out_73537383094869577[34] = 0;
   out_73537383094869577[35] = 0;
   out_73537383094869577[36] = 0;
   out_73537383094869577[37] = 0;
   out_73537383094869577[38] = 0;
   out_73537383094869577[39] = 1;
   out_73537383094869577[40] = 0;
   out_73537383094869577[41] = 0;
   out_73537383094869577[42] = 1;
   out_73537383094869577[43] = 0;
   out_73537383094869577[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_73537383094869577[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_73537383094869577[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_73537383094869577[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_73537383094869577[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_73537383094869577[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_73537383094869577[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_73537383094869577[51] = 0;
   out_73537383094869577[52] = 0;
   out_73537383094869577[53] = 0;
   out_73537383094869577[54] = 0;
   out_73537383094869577[55] = 0;
   out_73537383094869577[56] = 0;
   out_73537383094869577[57] = 0;
   out_73537383094869577[58] = 0;
   out_73537383094869577[59] = 0;
   out_73537383094869577[60] = 0;
   out_73537383094869577[61] = 0;
   out_73537383094869577[62] = 1;
   out_73537383094869577[63] = 0;
   out_73537383094869577[64] = 0;
   out_73537383094869577[65] = 1;
}
void h_12(double *state, double *unused, double *out_6015498378302342268) {
   out_6015498378302342268[0] = state[0];
   out_6015498378302342268[1] = state[1];
   out_6015498378302342268[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7881707846224736261) {
   out_7881707846224736261[0] = 1;
   out_7881707846224736261[1] = 0;
   out_7881707846224736261[2] = 0;
   out_7881707846224736261[3] = 0;
   out_7881707846224736261[4] = 0;
   out_7881707846224736261[5] = 0;
   out_7881707846224736261[6] = 0;
   out_7881707846224736261[7] = 0;
   out_7881707846224736261[8] = 0;
   out_7881707846224736261[9] = 0;
   out_7881707846224736261[10] = 0;
   out_7881707846224736261[11] = 0;
   out_7881707846224736261[12] = 0;
   out_7881707846224736261[13] = 0;
   out_7881707846224736261[14] = 0;
   out_7881707846224736261[15] = 0;
   out_7881707846224736261[16] = 0;
   out_7881707846224736261[17] = 0;
   out_7881707846224736261[18] = 0;
   out_7881707846224736261[19] = 0;
   out_7881707846224736261[20] = 0;
   out_7881707846224736261[21] = 0;
   out_7881707846224736261[22] = 0;
   out_7881707846224736261[23] = 1;
   out_7881707846224736261[24] = 0;
   out_7881707846224736261[25] = 0;
   out_7881707846224736261[26] = 0;
   out_7881707846224736261[27] = 0;
   out_7881707846224736261[28] = 0;
   out_7881707846224736261[29] = 0;
   out_7881707846224736261[30] = 0;
   out_7881707846224736261[31] = 0;
   out_7881707846224736261[32] = 0;
   out_7881707846224736261[33] = 0;
   out_7881707846224736261[34] = 0;
   out_7881707846224736261[35] = 0;
   out_7881707846224736261[36] = 0;
   out_7881707846224736261[37] = 0;
   out_7881707846224736261[38] = 0;
   out_7881707846224736261[39] = 0;
   out_7881707846224736261[40] = 0;
   out_7881707846224736261[41] = 0;
   out_7881707846224736261[42] = 0;
   out_7881707846224736261[43] = 0;
   out_7881707846224736261[44] = 0;
   out_7881707846224736261[45] = 0;
   out_7881707846224736261[46] = 1;
   out_7881707846224736261[47] = 0;
   out_7881707846224736261[48] = 0;
   out_7881707846224736261[49] = 0;
   out_7881707846224736261[50] = 0;
   out_7881707846224736261[51] = 0;
   out_7881707846224736261[52] = 0;
   out_7881707846224736261[53] = 0;
   out_7881707846224736261[54] = 0;
   out_7881707846224736261[55] = 0;
   out_7881707846224736261[56] = 0;
   out_7881707846224736261[57] = 0;
   out_7881707846224736261[58] = 0;
   out_7881707846224736261[59] = 0;
   out_7881707846224736261[60] = 0;
   out_7881707846224736261[61] = 0;
   out_7881707846224736261[62] = 0;
   out_7881707846224736261[63] = 0;
   out_7881707846224736261[64] = 0;
   out_7881707846224736261[65] = 0;
}
void h_35(double *state, double *unused, double *out_5839578915844121242) {
   out_5839578915844121242[0] = state[7];
   out_5839578915844121242[1] = state[8];
   out_5839578915844121242[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7819473195159801646) {
   out_7819473195159801646[0] = 0;
   out_7819473195159801646[1] = 0;
   out_7819473195159801646[2] = 0;
   out_7819473195159801646[3] = 0;
   out_7819473195159801646[4] = 0;
   out_7819473195159801646[5] = 0;
   out_7819473195159801646[6] = 0;
   out_7819473195159801646[7] = 1;
   out_7819473195159801646[8] = 0;
   out_7819473195159801646[9] = 0;
   out_7819473195159801646[10] = 0;
   out_7819473195159801646[11] = 0;
   out_7819473195159801646[12] = 0;
   out_7819473195159801646[13] = 0;
   out_7819473195159801646[14] = 0;
   out_7819473195159801646[15] = 0;
   out_7819473195159801646[16] = 0;
   out_7819473195159801646[17] = 0;
   out_7819473195159801646[18] = 0;
   out_7819473195159801646[19] = 0;
   out_7819473195159801646[20] = 0;
   out_7819473195159801646[21] = 0;
   out_7819473195159801646[22] = 0;
   out_7819473195159801646[23] = 0;
   out_7819473195159801646[24] = 0;
   out_7819473195159801646[25] = 0;
   out_7819473195159801646[26] = 0;
   out_7819473195159801646[27] = 0;
   out_7819473195159801646[28] = 0;
   out_7819473195159801646[29] = 0;
   out_7819473195159801646[30] = 1;
   out_7819473195159801646[31] = 0;
   out_7819473195159801646[32] = 0;
   out_7819473195159801646[33] = 0;
   out_7819473195159801646[34] = 0;
   out_7819473195159801646[35] = 0;
   out_7819473195159801646[36] = 0;
   out_7819473195159801646[37] = 0;
   out_7819473195159801646[38] = 0;
   out_7819473195159801646[39] = 0;
   out_7819473195159801646[40] = 0;
   out_7819473195159801646[41] = 0;
   out_7819473195159801646[42] = 0;
   out_7819473195159801646[43] = 0;
   out_7819473195159801646[44] = 0;
   out_7819473195159801646[45] = 0;
   out_7819473195159801646[46] = 0;
   out_7819473195159801646[47] = 0;
   out_7819473195159801646[48] = 0;
   out_7819473195159801646[49] = 0;
   out_7819473195159801646[50] = 0;
   out_7819473195159801646[51] = 0;
   out_7819473195159801646[52] = 0;
   out_7819473195159801646[53] = 1;
   out_7819473195159801646[54] = 0;
   out_7819473195159801646[55] = 0;
   out_7819473195159801646[56] = 0;
   out_7819473195159801646[57] = 0;
   out_7819473195159801646[58] = 0;
   out_7819473195159801646[59] = 0;
   out_7819473195159801646[60] = 0;
   out_7819473195159801646[61] = 0;
   out_7819473195159801646[62] = 0;
   out_7819473195159801646[63] = 0;
   out_7819473195159801646[64] = 0;
   out_7819473195159801646[65] = 0;
}
void h_32(double *state, double *unused, double *out_2667490022277895409) {
   out_2667490022277895409[0] = state[3];
   out_2667490022277895409[1] = state[4];
   out_2667490022277895409[2] = state[5];
   out_2667490022277895409[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5114448682258051709) {
   out_5114448682258051709[0] = 0;
   out_5114448682258051709[1] = 0;
   out_5114448682258051709[2] = 0;
   out_5114448682258051709[3] = 1;
   out_5114448682258051709[4] = 0;
   out_5114448682258051709[5] = 0;
   out_5114448682258051709[6] = 0;
   out_5114448682258051709[7] = 0;
   out_5114448682258051709[8] = 0;
   out_5114448682258051709[9] = 0;
   out_5114448682258051709[10] = 0;
   out_5114448682258051709[11] = 0;
   out_5114448682258051709[12] = 0;
   out_5114448682258051709[13] = 0;
   out_5114448682258051709[14] = 0;
   out_5114448682258051709[15] = 0;
   out_5114448682258051709[16] = 0;
   out_5114448682258051709[17] = 0;
   out_5114448682258051709[18] = 0;
   out_5114448682258051709[19] = 0;
   out_5114448682258051709[20] = 0;
   out_5114448682258051709[21] = 0;
   out_5114448682258051709[22] = 0;
   out_5114448682258051709[23] = 0;
   out_5114448682258051709[24] = 0;
   out_5114448682258051709[25] = 0;
   out_5114448682258051709[26] = 1;
   out_5114448682258051709[27] = 0;
   out_5114448682258051709[28] = 0;
   out_5114448682258051709[29] = 0;
   out_5114448682258051709[30] = 0;
   out_5114448682258051709[31] = 0;
   out_5114448682258051709[32] = 0;
   out_5114448682258051709[33] = 0;
   out_5114448682258051709[34] = 0;
   out_5114448682258051709[35] = 0;
   out_5114448682258051709[36] = 0;
   out_5114448682258051709[37] = 0;
   out_5114448682258051709[38] = 0;
   out_5114448682258051709[39] = 0;
   out_5114448682258051709[40] = 0;
   out_5114448682258051709[41] = 0;
   out_5114448682258051709[42] = 0;
   out_5114448682258051709[43] = 0;
   out_5114448682258051709[44] = 0;
   out_5114448682258051709[45] = 0;
   out_5114448682258051709[46] = 0;
   out_5114448682258051709[47] = 0;
   out_5114448682258051709[48] = 0;
   out_5114448682258051709[49] = 1;
   out_5114448682258051709[50] = 0;
   out_5114448682258051709[51] = 0;
   out_5114448682258051709[52] = 0;
   out_5114448682258051709[53] = 0;
   out_5114448682258051709[54] = 0;
   out_5114448682258051709[55] = 0;
   out_5114448682258051709[56] = 0;
   out_5114448682258051709[57] = 0;
   out_5114448682258051709[58] = 0;
   out_5114448682258051709[59] = 0;
   out_5114448682258051709[60] = 0;
   out_5114448682258051709[61] = 0;
   out_5114448682258051709[62] = 0;
   out_5114448682258051709[63] = 0;
   out_5114448682258051709[64] = 0;
   out_5114448682258051709[65] = 0;
   out_5114448682258051709[66] = 0;
   out_5114448682258051709[67] = 0;
   out_5114448682258051709[68] = 0;
   out_5114448682258051709[69] = 0;
   out_5114448682258051709[70] = 0;
   out_5114448682258051709[71] = 0;
   out_5114448682258051709[72] = 1;
   out_5114448682258051709[73] = 0;
   out_5114448682258051709[74] = 0;
   out_5114448682258051709[75] = 0;
   out_5114448682258051709[76] = 0;
   out_5114448682258051709[77] = 0;
   out_5114448682258051709[78] = 0;
   out_5114448682258051709[79] = 0;
   out_5114448682258051709[80] = 0;
   out_5114448682258051709[81] = 0;
   out_5114448682258051709[82] = 0;
   out_5114448682258051709[83] = 0;
   out_5114448682258051709[84] = 0;
   out_5114448682258051709[85] = 0;
   out_5114448682258051709[86] = 0;
   out_5114448682258051709[87] = 0;
}
void h_13(double *state, double *unused, double *out_377278173860008742) {
   out_377278173860008742[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_377278173860008742[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_377278173860008742[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7289401960388689286) {
   out_7289401960388689286[0] = 0;
   out_7289401960388689286[1] = 0;
   out_7289401960388689286[2] = 0;
   out_7289401960388689286[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7289401960388689286[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7289401960388689286[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7289401960388689286[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7289401960388689286[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7289401960388689286[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7289401960388689286[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7289401960388689286[10] = 0;
   out_7289401960388689286[11] = 0;
   out_7289401960388689286[12] = 0;
   out_7289401960388689286[13] = 0;
   out_7289401960388689286[14] = 0;
   out_7289401960388689286[15] = 0;
   out_7289401960388689286[16] = 0;
   out_7289401960388689286[17] = 0;
   out_7289401960388689286[18] = 0;
   out_7289401960388689286[19] = 0;
   out_7289401960388689286[20] = 0;
   out_7289401960388689286[21] = 0;
   out_7289401960388689286[22] = 0;
   out_7289401960388689286[23] = 0;
   out_7289401960388689286[24] = 0;
   out_7289401960388689286[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7289401960388689286[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7289401960388689286[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7289401960388689286[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7289401960388689286[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7289401960388689286[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7289401960388689286[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7289401960388689286[32] = 0;
   out_7289401960388689286[33] = 0;
   out_7289401960388689286[34] = 0;
   out_7289401960388689286[35] = 0;
   out_7289401960388689286[36] = 0;
   out_7289401960388689286[37] = 0;
   out_7289401960388689286[38] = 0;
   out_7289401960388689286[39] = 0;
   out_7289401960388689286[40] = 0;
   out_7289401960388689286[41] = 0;
   out_7289401960388689286[42] = 0;
   out_7289401960388689286[43] = 0;
   out_7289401960388689286[44] = 0;
   out_7289401960388689286[45] = 0;
   out_7289401960388689286[46] = 0;
   out_7289401960388689286[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7289401960388689286[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7289401960388689286[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7289401960388689286[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7289401960388689286[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7289401960388689286[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7289401960388689286[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7289401960388689286[54] = 0;
   out_7289401960388689286[55] = 0;
   out_7289401960388689286[56] = 0;
   out_7289401960388689286[57] = 0;
   out_7289401960388689286[58] = 0;
   out_7289401960388689286[59] = 0;
   out_7289401960388689286[60] = 0;
   out_7289401960388689286[61] = 0;
   out_7289401960388689286[62] = 0;
   out_7289401960388689286[63] = 0;
   out_7289401960388689286[64] = 0;
   out_7289401960388689286[65] = 0;
}
void h_14(double *state, double *unused, double *out_2084619982870984247) {
   out_2084619982870984247[0] = state[10];
   out_2084619982870984247[1] = state[11];
   out_2084619982870984247[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3103441084822365111) {
   out_3103441084822365111[0] = 0;
   out_3103441084822365111[1] = 0;
   out_3103441084822365111[2] = 0;
   out_3103441084822365111[3] = 0;
   out_3103441084822365111[4] = 0;
   out_3103441084822365111[5] = 0;
   out_3103441084822365111[6] = 0;
   out_3103441084822365111[7] = 0;
   out_3103441084822365111[8] = 0;
   out_3103441084822365111[9] = 0;
   out_3103441084822365111[10] = 1;
   out_3103441084822365111[11] = 0;
   out_3103441084822365111[12] = 0;
   out_3103441084822365111[13] = 0;
   out_3103441084822365111[14] = 0;
   out_3103441084822365111[15] = 0;
   out_3103441084822365111[16] = 0;
   out_3103441084822365111[17] = 0;
   out_3103441084822365111[18] = 0;
   out_3103441084822365111[19] = 0;
   out_3103441084822365111[20] = 0;
   out_3103441084822365111[21] = 0;
   out_3103441084822365111[22] = 0;
   out_3103441084822365111[23] = 0;
   out_3103441084822365111[24] = 0;
   out_3103441084822365111[25] = 0;
   out_3103441084822365111[26] = 0;
   out_3103441084822365111[27] = 0;
   out_3103441084822365111[28] = 0;
   out_3103441084822365111[29] = 0;
   out_3103441084822365111[30] = 0;
   out_3103441084822365111[31] = 0;
   out_3103441084822365111[32] = 0;
   out_3103441084822365111[33] = 1;
   out_3103441084822365111[34] = 0;
   out_3103441084822365111[35] = 0;
   out_3103441084822365111[36] = 0;
   out_3103441084822365111[37] = 0;
   out_3103441084822365111[38] = 0;
   out_3103441084822365111[39] = 0;
   out_3103441084822365111[40] = 0;
   out_3103441084822365111[41] = 0;
   out_3103441084822365111[42] = 0;
   out_3103441084822365111[43] = 0;
   out_3103441084822365111[44] = 0;
   out_3103441084822365111[45] = 0;
   out_3103441084822365111[46] = 0;
   out_3103441084822365111[47] = 0;
   out_3103441084822365111[48] = 0;
   out_3103441084822365111[49] = 0;
   out_3103441084822365111[50] = 0;
   out_3103441084822365111[51] = 0;
   out_3103441084822365111[52] = 0;
   out_3103441084822365111[53] = 0;
   out_3103441084822365111[54] = 0;
   out_3103441084822365111[55] = 0;
   out_3103441084822365111[56] = 1;
   out_3103441084822365111[57] = 0;
   out_3103441084822365111[58] = 0;
   out_3103441084822365111[59] = 0;
   out_3103441084822365111[60] = 0;
   out_3103441084822365111[61] = 0;
   out_3103441084822365111[62] = 0;
   out_3103441084822365111[63] = 0;
   out_3103441084822365111[64] = 0;
   out_3103441084822365111[65] = 0;
}
void h_33(double *state, double *unused, double *out_8818790185335810067) {
   out_8818790185335810067[0] = state[16];
   out_8818790185335810067[1] = state[17];
   out_8818790185335810067[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9067273573505312170) {
   out_9067273573505312170[0] = 0;
   out_9067273573505312170[1] = 0;
   out_9067273573505312170[2] = 0;
   out_9067273573505312170[3] = 0;
   out_9067273573505312170[4] = 0;
   out_9067273573505312170[5] = 0;
   out_9067273573505312170[6] = 0;
   out_9067273573505312170[7] = 0;
   out_9067273573505312170[8] = 0;
   out_9067273573505312170[9] = 0;
   out_9067273573505312170[10] = 0;
   out_9067273573505312170[11] = 0;
   out_9067273573505312170[12] = 0;
   out_9067273573505312170[13] = 0;
   out_9067273573505312170[14] = 0;
   out_9067273573505312170[15] = 0;
   out_9067273573505312170[16] = 1;
   out_9067273573505312170[17] = 0;
   out_9067273573505312170[18] = 0;
   out_9067273573505312170[19] = 0;
   out_9067273573505312170[20] = 0;
   out_9067273573505312170[21] = 0;
   out_9067273573505312170[22] = 0;
   out_9067273573505312170[23] = 0;
   out_9067273573505312170[24] = 0;
   out_9067273573505312170[25] = 0;
   out_9067273573505312170[26] = 0;
   out_9067273573505312170[27] = 0;
   out_9067273573505312170[28] = 0;
   out_9067273573505312170[29] = 0;
   out_9067273573505312170[30] = 0;
   out_9067273573505312170[31] = 0;
   out_9067273573505312170[32] = 0;
   out_9067273573505312170[33] = 0;
   out_9067273573505312170[34] = 0;
   out_9067273573505312170[35] = 0;
   out_9067273573505312170[36] = 0;
   out_9067273573505312170[37] = 0;
   out_9067273573505312170[38] = 0;
   out_9067273573505312170[39] = 1;
   out_9067273573505312170[40] = 0;
   out_9067273573505312170[41] = 0;
   out_9067273573505312170[42] = 0;
   out_9067273573505312170[43] = 0;
   out_9067273573505312170[44] = 0;
   out_9067273573505312170[45] = 0;
   out_9067273573505312170[46] = 0;
   out_9067273573505312170[47] = 0;
   out_9067273573505312170[48] = 0;
   out_9067273573505312170[49] = 0;
   out_9067273573505312170[50] = 0;
   out_9067273573505312170[51] = 0;
   out_9067273573505312170[52] = 0;
   out_9067273573505312170[53] = 0;
   out_9067273573505312170[54] = 0;
   out_9067273573505312170[55] = 0;
   out_9067273573505312170[56] = 0;
   out_9067273573505312170[57] = 0;
   out_9067273573505312170[58] = 0;
   out_9067273573505312170[59] = 0;
   out_9067273573505312170[60] = 0;
   out_9067273573505312170[61] = 0;
   out_9067273573505312170[62] = 1;
   out_9067273573505312170[63] = 0;
   out_9067273573505312170[64] = 0;
   out_9067273573505312170[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8714353098324573288) {
  H(in_vec, out_8714353098324573288);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3390447180956984316) {
  err_fun(nom_x, delta_x, out_3390447180956984316);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6050591331665856977) {
  inv_err_fun(nom_x, true_x, out_6050591331665856977);
}
void live_H_mod_fun(double *state, double *out_6584064886042052704) {
  H_mod_fun(state, out_6584064886042052704);
}
void live_f_fun(double *state, double dt, double *out_8896929047166450191) {
  f_fun(state,  dt, out_8896929047166450191);
}
void live_F_fun(double *state, double dt, double *out_6591234296711432517) {
  F_fun(state,  dt, out_6591234296711432517);
}
void live_h_4(double *state, double *unused, double *out_17249495657416169) {
  h_4(state, unused, out_17249495657416169);
}
void live_H_4(double *state, double *unused, double *out_2862251438192774466) {
  H_4(state, unused, out_2862251438192774466);
}
void live_h_9(double *state, double *unused, double *out_2084619982870984247) {
  h_9(state, unused, out_2084619982870984247);
}
void live_H_9(double *state, double *unused, double *out_3103441084822365111) {
  H_9(state, unused, out_3103441084822365111);
}
void live_h_10(double *state, double *unused, double *out_3447774714965570930) {
  h_10(state, unused, out_3447774714965570930);
}
void live_H_10(double *state, double *unused, double *out_73537383094869577) {
  H_10(state, unused, out_73537383094869577);
}
void live_h_12(double *state, double *unused, double *out_6015498378302342268) {
  h_12(state, unused, out_6015498378302342268);
}
void live_H_12(double *state, double *unused, double *out_7881707846224736261) {
  H_12(state, unused, out_7881707846224736261);
}
void live_h_35(double *state, double *unused, double *out_5839578915844121242) {
  h_35(state, unused, out_5839578915844121242);
}
void live_H_35(double *state, double *unused, double *out_7819473195159801646) {
  H_35(state, unused, out_7819473195159801646);
}
void live_h_32(double *state, double *unused, double *out_2667490022277895409) {
  h_32(state, unused, out_2667490022277895409);
}
void live_H_32(double *state, double *unused, double *out_5114448682258051709) {
  H_32(state, unused, out_5114448682258051709);
}
void live_h_13(double *state, double *unused, double *out_377278173860008742) {
  h_13(state, unused, out_377278173860008742);
}
void live_H_13(double *state, double *unused, double *out_7289401960388689286) {
  H_13(state, unused, out_7289401960388689286);
}
void live_h_14(double *state, double *unused, double *out_2084619982870984247) {
  h_14(state, unused, out_2084619982870984247);
}
void live_H_14(double *state, double *unused, double *out_3103441084822365111) {
  H_14(state, unused, out_3103441084822365111);
}
void live_h_33(double *state, double *unused, double *out_8818790185335810067) {
  h_33(state, unused, out_8818790185335810067);
}
void live_H_33(double *state, double *unused, double *out_9067273573505312170) {
  H_33(state, unused, out_9067273573505312170);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
